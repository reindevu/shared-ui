{"version":3,"sources":["../src/index.ts","../src/ui/button/ui.tsx","../src/lib.ts","../src/ui/description/ui.tsx","../src/ui/drawer/ui.tsx","../src/ui/form-error/ui.tsx","../src/ui/input/ui.tsx","../src/ui/label/ui.tsx","../src/ui/select/ui.tsx","../src/ui/select/model.ts","../src/ui/textarea/ui.tsx","../src/ui/text/ui.tsx","../src/ui/generic-table/ui/generic-table-pagination/ui.tsx","../src/ui/generic-table/model/generate-pagination.ts","../src/ui/generic-table/model/use-generic-table-filter.ts","../src/ui/generic-table/model/object-to-filter-string.ts","../src/ui/generic-table/model/constants.ts","../src/ui/field/ui.tsx","../src/ui/generic-table/ui/generic-table/ui.tsx","../src/ui/generic-table/ui/generic-table-search/ui.tsx","../src/ui/generic-table/ui/generic-table-row-action/ui.tsx","../src/ui/container/ui.tsx","../src/ui/wrapper/ui.tsx","../src/ui/nav/ui/nav-link/ui.tsx","../src/ui/nav/ui/nav-title/ui.tsx"],"sourcesContent":["export { Button } from \"./ui/button\";\nexport { Description } from \"./ui/description\";\nexport { Drawer } from \"./ui/drawer\";\nexport { FormError } from \"./ui/form-error\";\nexport { Input } from \"./ui/input\";\nexport { Label } from \"./ui/label\";\nexport {\n  Select,\n  SelectLabel,\n  SelectOption,\n  getSelectMultipleValue,\n  getSelectSingleValue,\n} from \"./ui/select\";\nexport { Textarea } from \"./ui/textarea\";\n\nexport { cn, useIsMobile } from \"./lib\";\nexport { Text } from \"./ui/text\";\n\nexport {\n  type GenericTableColumnType,\n  GenericTable,\n  GenericTableSearch,\n  useGenericTableFilter,\n  GenericTableRowAction,\n} from \"./ui/generic-table\";\n\nexport { Container } from \"./ui/container\";\nexport { Wrapper } from \"./ui/wrapper\";\nexport { Field } from \"./ui/field\";\n\nexport { NavLink, NavTitle } from \"./ui/nav\";\n","import * as Headless from \"@headlessui/react\";\nimport { FC } from \"react\";\n\nimport { cn } from \"../../lib\";\n\ninterface Props extends Headless.ButtonProps {\n  variant?: \"primary\" | \"secondary\" | \"tertinary\" | \"unstyled\";\n}\n\nexport const Button: FC<Props> = ({\n  children,\n  className = \"\",\n  variant = \"primary\",\n  ...props\n}) => {\n  return (\n    <Headless.Button\n      className={cn(\n        \"text-xs\",\n        {\n          \"rounded-md gap-2 px-2.5 h-8 py-1.5 cursor-pointer border-none flex items-center justify-center text-sm disabled:opacity-50\":\n            variant !== \"unstyled\",\n          \"border-none bg-transparent cursor-pointer w-fit h-fit\":\n            variant === \"unstyled\",\n          \"bg-emerald-600 font-medium text-white border border-black/10 border-solid\":\n            variant === \"primary\",\n          \"border border-gray-200 border-solid text-neutral-500\":\n            variant === \"tertinary\",\n          \"border border-blue-300 border-solid text-blue-500\":\n            variant === \"secondary\",\n        },\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Headless.Button>\n  );\n};\n\nButton.displayName = \"Button\"","\"use client\";\n\nimport { ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport { useEffect, useState } from \"react\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n\n\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768); // Примерный порог для мобильных устройств\n    };\n\n    // Вызываем обработчик один раз, чтобы установить начальное значение\n    handleResize();\n\n    // Добавляем слушатель события изменения размера окна\n    window.addEventListener(\"resize\", handleResize);\n\n    // Убираем слушатель события при размонтировании компонента\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return isMobile;\n}\n","\"use client\";\n\nimport * as Headless from '@headlessui/react';\n\nimport { FC } from \"react\";\n\nimport { cn } from \"../../lib\";\n\ntype Props = Headless.DescriptionProps;\n\nexport const Description: FC<Props> = ({ children, className, ...props }) => {\n  return (\n    <Headless.Description className={cn(\"text-xs text-neutral-600\", className)} {...props}>\n      {children}\n    </Headless.Description>\n  );\n};\n\nDescription.displayName = \"Description\";","import * as Headless from \"@headlessui/react\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\nimport clsx from \"clsx\";\nimport { FC, Fragment } from \"react\";\n\nimport { cn } from \"../../lib\";\nimport { Button } from \"../button\";\n\ntype Props = {\n  open: boolean;\n  onOpenChange: () => void;\n  header?: string;\n  children: React.ReactNode;\n  panelClassName?: string;\n  childrenClassName?: string;\n};\n\nexport const Drawer: FC<Props> = props => {\n  return (\n    <Headless.Transition show={props.open} as={Fragment}>\n      <Headless.Dialog as=\"div\" className=\"relative z-[999]\" onClose={props.onOpenChange}>\n        <Headless.TransitionChild\n          as={Fragment}\n          enter=\"ease-in-out duration-500\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in-out duration-500\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 transition-opacity backdrop-blur-[2px]\" />\n        </Headless.TransitionChild>\n\n        <div className=\"fixed inset-0 overflow-hidden\">\n          <div className=\"absolute inset-0 overflow-hidden\">\n            <div className=\"pointer-events-none fixed inset-y-0 right-0 flex pl-10\">\n              <Headless.TransitionChild\n                as={Fragment}\n                enter=\"transform transition ease-in-out duration-500 sm:duration-700\"\n                enterFrom=\"translate-x-full\"\n                enterTo=\"translate-x-0\"\n                leave=\"transform transition ease-in-out duration-500 sm:duration-700\"\n                leaveFrom=\"translate-x-0\"\n                leaveTo=\"translate-x-full\"\n              >\n                <Headless.DialogPanel\n                  className={clsx(\"pointer-events-auto relative w-screen lg:max-w-xl flex flex-col justify-center\", props.panelClassName)}\n                >\n                  <div className=\"flex h-full flex-col overflow-y-scroll bg-white py-4 md:py-6 shadow-xl w-full\">\n                    {props.header && (\n                      <div className=\"flex items-center justify-between px-4 sm:px-6\">\n                        <Headless.DialogTitle className=\"text-base font-semibold leading-6 text-gray-900\">\n                          {props.header}\n                        </Headless.DialogTitle>\n\n                        <Button\n                          variant=\"unstyled\"\n                          type=\"button\"\n                          className=\"relative rounded-md text-gray-300 focus:outline-none\"\n                          onClick={props.onOpenChange}\n                        >\n                          <XMarkIcon className=\"h-6 w-6 text-black\" aria-hidden=\"true\" />\n                        </Button>\n                      </div>\n                    )}\n\n                    <div\n                      className={cn(\"relative flex-1 px-4 md:px-6\", props.childrenClassName, {\n                        \"mt-6\": !!props.header,\n                      })}\n                    >\n                      {props.children}\n                    </div>\n                  </div>\n                </Headless.DialogPanel>\n              </Headless.TransitionChild>\n            </div>\n          </div>\n        </div>\n      </Headless.Dialog>\n    </Headless.Transition>\n  );\n};\n\n\nDrawer.displayName = \"Drawer\";","import { FC } from \"react\";\nimport { FieldError } from \"react-hook-form\";\n\ntype Props = {\n  error?: FieldError;\n};\n\nexport const FormError: FC<Props> = props => {\n  if (!props.error) {\n    return <></>;\n  }\n\n  return <p className=\"text-xs text-red-600\">{props.error.message}</p>;\n};\n\nFormError.displayName = \"FormError\";","import * as Headless from \"@headlessui/react\";\nimport { FC, forwardRef } from \"react\";\n\nimport { cn } from \"../../lib\";\n\ninterface Props extends Headless.InputProps {\n\n}\n\nexport const Input: FC<Props> = forwardRef<HTMLInputElement, Props>(({ className = \"\", ...props }, ref) => {\n  return (\n    <Headless.Input\n      ref={ref}\n      className={cn(\n        \"bg-tranparent relative rounded-md p-2 h-8 w-full placeholder:text-sm text-sm placeholder:text-neutral-500 focus:outline-emerald-600 border border-neutral-300 border-solid bg-white data-[invalid]:outline-red-600\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\n\nInput.displayName = \"Input\";","\"use client\";\n\nimport * as Headless from '@headlessui/react';\n\nimport { FC } from \"react\";\n\nimport { cn } from \"../../lib\";\n\ntype Props = Headless.LabelProps;\n\nexport const Label: FC<Props> = ({ children, className, ...props }) => {\n  return (\n    <Headless.Label className={cn(\"text-sm text-neutral-600\", className)} {...props}>\n      {children}\n    </Headless.Label>\n  );\n};\n\nLabel.displayName = \"Label\";","\"use client\";\n\nimport * as Headless from \"@headlessui/react\";\nimport { cn } from \"../../lib\";\nimport React, {\n  FC,\n  Children,\n  forwardRef,\n  Fragment,\n  isValidElement,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { Input } from \"../input\";\nimport { CheckIcon, ChevronUpDownIcon } from \"@heroicons/react/24/outline\";\n\nexport type Props = {\n  className?: string;\n  placeholder?: React.ReactNode;\n  hideSearch?: boolean;\n  virtualized?: boolean;\n  children: React.ReactElement | Array<React.ReactElement>;\n} & Headless.ListboxProps<typeof Fragment, SelectValue[] | SelectValue | null>;\n\nexport type SelectValue = {\n  id: string;\n  name: string;\n};\n\nconst Select: FC<Props> = forwardRef(\n  (\n    { value, defaultValue, children: options, ...props },\n    ref: React.ForwardedRef<HTMLSpanElement>\n  ) => {\n    const [query, setQuery] = useState(\"\");\n\n    const [selectedValues, setSelectedValues] = useState<SelectValue[]>(() => {\n      const initial = value ?? defaultValue ?? [];\n      return Array.isArray(initial) ? initial : [initial];\n    });\n\n    const [itemsToRender, setItemsToRender] = useState<React.ReactElement[]>(\n      () =>\n        props.virtualized ? [] : Array.isArray(options) ? options : [options]\n    );\n\n    const handleChange = (value: SelectValue | SelectValue[]) => {\n      const newSelected = Array.isArray(value)\n        ? value.filter((item) => item.id)\n        : value.id\n        ? [value]\n        : [];\n\n      setQuery(\"\");\n      setSelectedValues(newSelected);\n      props.onChange?.(value);\n    };\n\n    useEffect(() => {\n      if (props.virtualized) {\n        return;\n      }\n\n      const q = query.toLowerCase();\n      setItemsToRender(\n        Children.toArray(options)\n          .filter(isValidElement)\n          .filter((el) =>\n            ((el.props as SelectOptionProps).value as SelectValue).name\n              .toLowerCase()\n              .includes(q)\n          )\n      );\n    }, [options, query]);\n\n    useEffect(() => {\n      setSelectedValues(value ? (Array.isArray(value) ? value : [value]) : []);\n    }, [value]);\n\n    return (\n      <SelectList\n        {...ref}\n        {...props}\n        selectedValues={selectedValues}\n        itemsToRender={itemsToRender}\n        children={options}\n        onChange={handleChange}\n        onQueryChange={setQuery}\n      />\n    );\n  }\n);\n\nexport type SelectOptionProps = {\n  children: React.ReactNode;\n  className?: string;\n} & Headless.ListboxOptionProps<\"div\", unknown>;\n\nconst SelectOption: FC<SelectOptionProps> = ({\n  children,\n  className,\n  ...props\n}) => {\n  return (\n    <Headless.ListboxOption as={Fragment} {...props}>\n      {({ selectedOption }) => {\n        if (selectedOption) {\n          return (\n            <div className={cn(className, \"flex min-w-0 items-center\")}>\n              {children}\n            </div>\n          );\n        }\n\n        return (\n          <div className=\"group/option data-[focus]:bg-neutral-100 data-[disabled]:opacity-50 flex justify-between p-1.5 rounded-md cursor-pointer data-[selected]:bg-neutral-100\">\n            <span className={cn(className, \"flex min-w-0 items-center\")}>\n              {children}\n            </span>\n\n            <CheckIcon className=\"w-4 h-4 text-black relative hidden stroke-current group-data-[selected]/option:inline\" />\n          </div>\n        );\n      }}\n    </Headless.ListboxOption>\n  );\n};\n\n// -----\n\ntype SelectLabelProps = React.ComponentPropsWithoutRef<\"span\">;\n\nconst SelectLabel: FC<SelectLabelProps> = ({ className, ...props }) => (\n  <span\n    className={cn(\n      className,\n      \"truncate first:ml-0 sm:ml-2 sm:first:ml-0 text-sm\"\n    )}\n    {...props}\n  />\n);\n\n// -----\n\ntype SelectListProps = Props & {\n  selectedValues: SelectValue[];\n  itemsToRender: React.ReactElement[];\n  onQueryChange: (str: string) => void;\n};\n\nexport const SelectList: FC<SelectListProps> = forwardRef(\n  (\n    {\n      children,\n      className,\n      itemsToRender,\n      hideSearch = false,\n      multiple,\n      placeholder,\n      selectedValues,\n      virtualized,\n      onChange,\n      onQueryChange,\n      ...props\n    },\n    _\n  ) => {\n    const rootRef = useRef<HTMLDivElement | null>(null);\n\n    const isShowInput = !hideSearch && !virtualized;\n\n    return (\n      <Headless.Listbox\n        {...props}\n        as=\"div\"\n        className=\"w-full\"\n        ref={rootRef}\n        value={multiple ? selectedValues : selectedValues[0] ?? \"\"}\n        multiple={multiple}\n        onChange={onChange}\n      >\n        <Headless.ListboxButton\n          className={cn(\n            \"relative flex items-center w-full border border-neutral-300 border-solid bg-white rounded-md h-8 shadow-sm appearance-none\",\n            className\n          )}\n        >\n          {selectedValues.length > 0 && selectedValues[0].id ? (\n            <span className=\"relative block w-full appearance-none truncate rounded-md py-[calc(theme(spacing[1.5]))] text-black text-left text-sm px-2 bg-transparent\">\n              {selectedValues[0].name}\n            </span>\n          ) : (\n            <p className=\"relative block w-full appearance-none truncate rounded-md px-2 text-left text-sm text-neutral-500\">\n              {placeholder ?? \"123\"}\n            </p>\n          )}\n\n          {selectedValues.length > 1 && (\n            <div className=\"absolute inset-y-0 right-6 my-auto h-fit bg-violet-500 text-[0.625rem] text-white py-px px-1.5 rounded-md\">\n              + {selectedValues.length - 1}\n            </div>\n          )}\n\n          <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n            <ChevronUpDownIcon className=\"size-5 stroke-zinc-500 group-data-[disabled]:stroke-zinc-600 sm:size-4\" />\n          </span>\n        </Headless.ListboxButton>\n\n        <Headless.ListboxOptions\n          as=\"div\"\n          transition\n          anchor=\"bottom start\"\n          style={{ width: rootRef.current?.clientWidth }}\n          className=\"mt-1 h-[230px] z-[9999] overflow-hidden rounded-md w-full overflow-y-scroll overscroll-contain bg-white backdrop-blur-xl shadow-lg ring-1 ring-zinc-950/10 transition-opacity duration-200 ease-in data-[transition]:pointer-events-none data-[closed]:data-[leave]:opacity-0\"\n        >\n          {isShowInput && (\n            <Input\n              className=\"rounded-none rounded-t-lg border-l-0 border-r-0 border-t-0 shadow-none outline-0 ring-0 focus:border-primary-300 focus:outline-none focus:ring-0\"\n              onChange={(e) => onQueryChange(e.target.value)}\n            />\n          )}\n\n          {virtualized && children}\n\n          {!virtualized && (\n            <div className=\"p-1\">\n              {itemsToRender.length > 0 ? (\n                itemsToRender\n              ) : (\n                <p className=\"flex h-9 items-center justify-center text-sm\">\n                  Ничего не найдено\n                </p>\n              )}\n            </div>\n          )}\n        </Headless.ListboxOptions>\n      </Headless.Listbox>\n    );\n  }\n);\n\nSelect.displayName = \"Select\";\nSelectLabel.displayName = \"SelectLabel\";\nSelectOption.displayName = \"SelectOption\";\n\nexport { Select, SelectLabel, SelectOption };\n\n\n","import { SelectValue } from \"./ui\";\n\ntype ListItem<T> = SelectValue & T;\n\nexport const getSelectSingleValue = <T>(\n  value: string,\n  list: ListItem<T>[] | SelectValue[]\n): ListItem<T> | null => {\n  const findEl = list.find((el) => el.id === value);\n\n  if (!findEl) {\n    return null;\n  }\n\n  return findEl as ListItem<T>;\n};\n\nexport const getSelectMultipleValue = <T>(\n  listValues: string[],\n  list: SelectValue[]\n): Array<SelectValue> => {\n  const arr: Array<ListItem<T> | SelectValue> = [];\n\n  listValues.forEach((value) => {\n    const findEl = list.find((el) => el.id === value);\n\n    if (findEl) {\n      arr.push(findEl);\n    }\n  });\n\n  return arr;\n};\n","\"use client\";\n\nimport * as Headless from \"@headlessui/react\";\nimport { FC, forwardRef } from \"react\";\nimport { cn } from \"../../lib\";\n\ntype Props = Headless.TextareaProps & {\n  rows?: number;\n  readOnly?: boolean;\n};\n\nexport const Textarea: FC<Props> = forwardRef<HTMLTextAreaElement, Props>(\n  ({ className, rows, ...props }, ref) => {\n    return (\n      <Headless.Textarea\n        ref={ref}\n        className={cn(\n          \"w-full rounded-md bg-transparent p-2.5 placeholder:text-sm text-sm shadow-sm placeholder:text-neutral-500 focus:outline-none border border-neutral-300 border-solid\",\n          className\n        )}\n        rows={rows}\n        {...props}\n      />\n    );\n  }\n);\n\nTextarea.displayName = \"Textarea\";\n","import { FC, createElement } from \"react\";\nimport { cn } from \"../../lib\";\n\ntype Props = {\n  as: \"p\" | \"span\";\n  className?: string;\n  children: React.ReactNode;\n};\n\nexport const Text: FC<Props> = ({ as, className, children }) => {\n  return createElement(as, { className: cn(className) }, children);\n};\n","import React, { FC } from \"react\";\nimport { generatePagination } from \"../../model/generate-pagination\";\nimport { useGenericTableFilter } from \"../../model/use-generic-table-filter\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/24/outline\";\nimport { Button } from \"../../../button\";\nimport { cn } from \"../../../../lib\";\n\ntype GenericPaginationListProps = {\n  pageSize: number;\n  pageNumber: number;\n  recordsCount: number;\n};\n\nexport const GenericTablePagination: FC<GenericPaginationListProps> = ({\n  pageSize,\n  pageNumber,\n  recordsCount,\n}) => {\n  const { filter, setFilter } = useGenericTableFilter({ keys: [] });\n\n  const handleClick = (pn: number) => {\n    setFilter({ ...filter, pn: `${pn}` });\n  };\n\n  const paginationList = generatePagination({\n    pageSize,\n    currentPage: pageNumber + 1,\n    totalRecords: recordsCount,\n    leftBoundaryCount: 1,\n    rightBoundaryCount: 3,\n    surroundingPagesCount: 1,\n  });\n\n  const handlePrev = () => {\n    if (pageNumber === 0) {\n      return;\n    }\n\n    setFilter({ ...filter, pn: `${pageNumber - 1}` });\n  };\n\n  const handleNext = () => {\n    if (pageNumber + 1 === paginationList.totalPages) {\n      return;\n    }\n\n    setFilter({ ...filter, pn: `${pageNumber + 1}` });\n  };\n\n  return (\n    <div className=\"flex gap-1.5 items-center\">\n      <Button\n        variant=\"tertinary\"\n        className=\"w-6 h-6 p-0 shadow-none disabled:opacity-50\"\n        onClick={handlePrev}\n        disabled={pageNumber === 0}\n      >\n        <ChevronLeftIcon className=\"w-4 h-4 h\" />\n      </Button>\n\n      {paginationList.visiblePages.map((key, index) => (\n        <React.Fragment key={key.type + index}>\n          {key.type === \"page\" && (\n            <Button\n              variant=\"tertinary\"\n              className={cn(\"w-6 h-6 shadow-none p-0 text-xs\", {\n                \"bg-gray-100 text-gray-800 border-gray-300\":\n                  pageNumber === key.page - 1,\n              })}\n              onClick={() => handleClick((key.page ?? 1) - 1)}\n            >\n              {key.page}\n            </Button>\n          )}\n\n          {key.type === \"delimiter\" && (\n            <Button\n              variant=\"unstyled\"\n              className=\"w-6 h-6 p-0 shadow-none text-xs flex items-end justify-center text-neutral-500\"\n            >\n              ...\n            </Button>\n          )}\n        </React.Fragment>\n      ))}\n\n      <Button\n        variant=\"tertinary\"\n        className=\"w-6 h-6 p-0 disabled:opacity-50 shadow-none\"\n        onClick={handleNext}\n        disabled={pageNumber + 1 === paginationList.totalPages}\n      >\n        <ChevronRightIcon className=\"w-4 h-4\" />\n      </Button>\n    </div>\n  );\n};\n","export type PaginationParams = {\n  pageSize: number;\n  currentPage: number;\n  totalRecords: number;\n  leftBoundaryCount: number;\n  rightBoundaryCount: number;\n  surroundingPagesCount: number;\n};\n\ntype PaginationItem = { type: \"page\"; page: number } | { type: \"delimiter\" };\n\nexport const generatePagination = (props: PaginationParams): { visiblePages: PaginationItem[]; totalPages: number } => {\n  const totalPages = Math.ceil(props.totalRecords / props.pageSize);\n\n  const paginationItems: PaginationItem[] = [];\n\n  const addPagesInRange = (start: number, end: number) => {\n    for (let page = start; page <= end; page++) {\n      paginationItems.push({ type: \"page\", page });\n    }\n  };\n\n  addPagesInRange(1, props.leftBoundaryCount);\n\n  if(totalPages === 1) {\n    return { visiblePages: paginationItems, totalPages };\n  }\n\n  if(totalPages < props.rightBoundaryCount) {\n    addPagesInRange(2, totalPages);\n    \n    return { visiblePages: paginationItems, totalPages };\n  }\n\n  let centerStart = Math.max(props.leftBoundaryCount + 1, props.currentPage - props.surroundingPagesCount);\n  let centerEnd = Math.min(totalPages - props.rightBoundaryCount, centerStart + props.surroundingPagesCount * 2);\n  centerStart = Math.max(props.leftBoundaryCount + 1, centerEnd - props.surroundingPagesCount * 2);\n\n  if (centerStart > props.leftBoundaryCount + 1) {\n    paginationItems.push({ type: \"delimiter\" });\n  }\n\n  addPagesInRange(centerStart, centerEnd);\n\n  if (centerEnd < totalPages - props.rightBoundaryCount) {\n    paginationItems.push({ type: \"delimiter\" });\n  }\n\n\n  addPagesInRange(totalPages - props.rightBoundaryCount + 1, totalPages);\n\n  return { visiblePages: paginationItems, totalPages };\n};","import { useEffect, useMemo, useState } from \"react\";\nimport { objectToFilterString } from \"./object-to-filter-string\";\nimport { GENERIC_PAGINATION_PN, GENERIC_PAGINATION_PS } from \"./constants\";\n\ntype UseGenericTableFilterProps = {\n  keys: string[]\n};\n\nexport const useGenericTableFilter = (props: UseGenericTableFilterProps) => {\n  const keys = useMemo(() => Array.from(new Set(props.keys)), [props.keys]);\n\n  type FilterProperty = typeof keys[number];\n  type Filter = Record<FilterProperty, string>;\n\n  const defaultFilter: Filter = { ps: GENERIC_PAGINATION_PS, pn: GENERIC_PAGINATION_PN } as Filter;\n\n  const [filter, setFilterState] = useState<Filter>(defaultFilter);\n  // const [searchParams] = useSearchParams();\n  // const navigate = useNavigate();\n  // const location = useLocation();\n\n\n  const updateFilterFromParams = () => {\n    const newFilter = { ...defaultFilter };\n\n    // keys.forEach((key) => {\n    //   const value = searchParams.get(key);\n    //   if (value !== null) {\n    //     newFilter[key] = value;\n    //   }\n    // });\n\n    setFilterState(newFilter);\n  };\n\n  const setFilter = (newFilter: Filter) => {\n    objectToFilterString(newFilter);\n    // navigate(`?${queryString}`);\n  };\n\n  useEffect(() => {\n    updateFilterFromParams();\n  }, [location.search]);\n\n  return { filter, setFilter}\n};","export function objectToFilterString(obj: Record<string, string>): string {\n  if (!obj || typeof obj !== \"object\") {\n    throw new Error(\"Input must be a valid object\");\n  }\n\n  return Object.entries(obj)\n    .filter(([_, value]) => value !== undefined && value !== null)\n    .map(\n      ([key, value]) =>\n        `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n    )\n    .join(\"&\");\n}\n","export const GENERIC_PAGINATION_PN = \"0\";\nexport const GENERIC_PAGINATION_PS = \"15\";","import * as Headless from '@headlessui/react';\n\nimport { FC } from \"react\";\nimport { cn } from '../../lib';\n\n\ntype Props = Headless.FieldProps;\n\nexport const Field: FC<Props> = ({ children, className, ...props }) => {\n  return (\n    <Headless.Field className={cn(\"space-y-1\", className)} {...props}>\n      {children}\n    </Headless.Field>\n  );\n};\n","import { FC } from \"react\";\nimport { GenericTablePagination } from \"../generic-table-pagination\";\nimport { GenericTableColumnType } from \"../../model/types\";\nimport { useGenericTableFilter } from \"../..\";\nimport { Field } from \"../../../field\";\nimport { Label } from \"../../../label\";\nimport { cn, useIsMobile } from \"../../../../lib\";\n\ntype Props = {\n  columns: GenericTableColumnType[];\n  dataSource: any[];\n  pagination: {\n    pageSize: number;\n    pageNumber: number;\n    recordsCount: number;\n  };\n};\n\nexport const GenericTable: FC<Props> = ({\n  columns,\n  dataSource,\n  pagination,\n}) => {\n  const { filter } = useGenericTableFilter({ keys: [\"q\", \"pn\", \"ps\"] });\n\n  const isFilterNotEmpty = !!Object.keys(filter).length;\n\n  const isShowPagination = isFilterNotEmpty && dataSource.length === 0;\n\n  const isMobile = useIsMobile();\n\n  if (isMobile) {\n    const isShowTable = !!dataSource.length;\n\n    return (\n      <div>\n        <p className=\"text-sm mb-1\">\n          {`Найдено записей: ${pagination.recordsCount}`}\n        </p>\n\n        {isShowTable && (\n          <div className=\"flex flex-col gap-2\">\n            {dataSource.map((key) => (\n              <Field\n                key={key.id}\n                className=\"bg-white p-2 rounded-md border border-gray-200 flex flex-col gap-1\"\n              >\n                {columns.map((column, columnIndex) => (\n                  <div\n                    key={`${column.key}_${columnIndex}`}\n                    className=\"text-black text-sm break-words\"\n                  >\n                    <Label>{column.title}</Label>\n\n                    <div>\n                      {column.render\n                        ? column.render(key)\n                        : key[column.dataIndex]}\n                    </div>\n                  </div>\n                ))}\n              </Field>\n            ))}\n          </div>\n        )}\n\n        {isShowTable && (\n          <div className=\"flex justify-center mt-2\">\n            {!isShowPagination && <GenericTablePagination {...pagination} />}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative overflow-hidden\">\n      <table className=\"w-full text-sm text-left rtl:text-right table-fixed text-gray-500 border-spacing-0\">\n        <thead className=\"text-gray-800 uppercase border-b border-gray-200\">\n          <tr>\n            {columns.map((key, index) => (\n              <th\n                key={`${key}_${index}`}\n                style={{ width: key.width }}\n                scope=\"col\"\n                className=\"px-4 py-1.5 font-bold text-xs\"\n              >\n                {key.title}\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {dataSource.map((row) => (\n            <tr\n              key={row.id}\n              className=\"border-b border-gray-200 last:border-b-0\"\n            >\n              {columns.map((column, columnIndex) => (\n                <td\n                  key={`${column.key}_${columnIndex}`}\n                  className=\"px-4 py-1.5 text-gray-800 text-sm break-words h-11\"\n                  valign=\"middle\"\n                >\n                  {column.render ? column.render(row) : row[column.dataIndex]}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <div\n        className={cn(\n          \"flex justify-between items-center py-2 border-t border-t-neutral-300 border-solid px-3\",\n          {\n            \"border-none justify-center\": isShowPagination,\n          }\n        )}\n      >\n        <span className=\"text-sm\">\n          {`Найдено документов: ${pagination.recordsCount}`}\n        </span>\n\n        {!isShowPagination && <GenericTablePagination {...pagination} />}\n      </div>\n    </div>\n  );\n};\n","import { MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useGenericTableFilter } from \"../../model/use-generic-table-filter\";\nimport { Input } from \"../../../input\";\nimport { Button } from \"../../../button\";\n\nexport const GenericTableSearch:FC = () => {\n  const { filter, setFilter } = useGenericTableFilter({ keys: [\"q\"] });\n\n  const [query, setQuery] = useState<string>(\"\");\n\n  const handleSearch = () => {\n    setFilter({ ...filter, q: query });\n  };\n\n  useEffect(() => {\n    setQuery(filter.q ?? \"\");\n  }, [filter.q]);\n\n  return (\n    <div className=\"relative w-full md:w-fit mb-4\">\n      <Input\n        type=\"text\"\n        className=\"w-full md:w-96\"\n        value={query}\n        placeholder=\"Введите текст для поиска\"\n        onChange={(e) => setQuery(e.currentTarget.value)}\n      />\n\n      <div className=\"absolute top-1/2 -translate-y-2/4 right-1\">\n        <Button className=\"h-6 w-6 p-0 text-xs\" onClick={handleSearch}>\n          <MagnifyingGlassIcon className=\"text-violet-700 w-4 h-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { PencilSquareIcon } from \"@heroicons/react/24/outline\";\nimport { FC } from \"react\";\nimport { Button } from \"../../../button\";\n\ntype Props = {\n  onEdit: () => void;\n};\n\nexport const GenericTableRowAction: FC<Props> = ({ onEdit }) => {\n  return (\n    <div className=\"w-full md:justify-end md:flex mt-2 md:mt-0\">\n      <Button variant=\"unstyled\" onClick={onEdit}>\n        <PencilSquareIcon className=\"hidden md:inline w-5 h-5\" />\n\n        <span className=\"md:hidden\">Редактировать запись</span>\n      </Button>\n    </div>\n  );\n};\n","import { FC, HTMLProps } from \"react\";\nimport { cn } from \"../../lib\";\n\ntype Props = HTMLProps<HTMLDivElement>;\n\nexport const Container: FC<Props> = ({ children, className, ...props }) => {\n  return (\n    <div\n      className={cn(\n        \"overflow-hidden h-full flex-1 grid grid-cols-[15rem_1fr]\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n","import { FC, HTMLProps } from \"react\";\nimport { cn } from \"../../lib\";\n\ntype Props = HTMLProps<HTMLDivElement>;\n\nexport const Wrapper: FC<Props> = ({ children, className, ...props }) => {\n  return (\n    <div\n      className={cn(\"h-dvh flex flex-col bg-neutral-100\", className)}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n","\nimport { FC } from \"react\";\nimport * as ReactRouterDom from \"react-router-dom\";\nimport { cn } from \"../../../../lib\";\nimport { Text } from \"../../../text\";\n\ntype Props = {\n  to: string;\n  children: React.ReactNode;\n};\n\nexport const NavLink: FC<Props> = ({ to, children }) => {\n  return (\n    <ReactRouterDom.NavLink\n      to={to}\n      className={({ isActive }) =>\n        cn(\"text-gray-500 py-1 px-3 rounded-lg transition-all\", {\n          \"bg-gray-200 text-black font-medium\": isActive,\n        })\n      }\n    >\n      <Text as=\"p\" className=\"text-sm truncate\">\n        {children}\n      </Text>\n    </ReactRouterDom.NavLink>\n  );\n};\n","import { FC } from \"react\";\nimport { Text } from \"../../../text\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const NavTitle: FC<Props> = ({ children }) => {\n  return (\n    <Text as=\"p\" className=\"text-xs font-bold uppercase px-3\">\n      {children}\n    </Text>\n  );\n};\n"],"mappings":"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","names":["Button","Description","Field","Input","Label","NavLink","Textarea","Button","Headless","import_jsx_runtime","Description","Headless","import_clsx","import_react","import_jsx_runtime","clsx","Button","import_jsx_runtime","Headless","import_react","import_jsx_runtime","Input","Headless","import_jsx_runtime","Label","Headless","import_react","import_outline","import_jsx_runtime","value","Input","Headless","import_react","import_jsx_runtime","Textarea","import_react","import_react","import_react","import_outline","import_jsx_runtime","Button","React","Headless","import_jsx_runtime","Field","import_jsx_runtime","Field","Label","import_outline","import_react","import_jsx_runtime","Input","Button","import_outline","import_jsx_runtime","Button","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","NavLink","import_jsx_runtime"]}